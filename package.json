{
  "name": "@qiwi/license",
  "version": "1.1.3",
  "description": "QIWI OSS License",
  "bin": {
    "qiwilicense": "target/es5/cli.js"
  },
  "main": "target/bundle/license.js",
  "module": "target/bundle/license.mjs",
  "unpkg": "target/bundle/license.umd.js",
  "source": "src/main/ts/index.ts",
  "types": "typings/index.d.ts",
  "typescript": {
    "definition": "typings/index.d.ts"
  },
  "files": [
    "README.md",
    "CHANGELOG.md",
    "target",
    "typings",
    "flow-typed"
  ],
  "scripts": {
    "jest": "jest -w 1 --config=jest.config.json",
    "lint": "tslint -p tsconfig.test.json src/**/*.ts",
    "lint:fix": "yarn lint --fix",
    "test": "yarn lint && yarn jest",
    "clean": "rimraf target typings",
    "build": "yarn clean && yarn build:tpl && yarn build:es5 && yarn build:es6 && yarn build:ts && yarn build:libdef && yarn docs && yarn uglify && yarn build:bundle",
    "build:tpl": "mkdir -p target/tpl && cp src/main/tpl/* target/tpl",
    "build:es5": "mkdir -p target/es5 && tsc -p tsconfig.es5.json",
    "build:es6": "mkdir -p target/es6 && tsc -p tsconfig.es6.json",
    "build:ts": "cp -r src/main/ts/ target/ts/",
    "build:bundle": "microbundle build src/main/ts/index.ts -o target/bundle",
    "build:libdef": "dts-generator --project ./ --out typings/index.d.ts --prefix @qiwi/license/target/es5 --name @qiwi/license --main @qiwi/license/target/es5/index --moduleResolution node && libdeffix --dts=./typings/index.d.ts --prefix=@qiwi/license/target/es5 && flowgen typings/index.d.ts --output-file flow-typed/index.flow.js",
    "test:report": "yarn test && yarn push:report",
    "push:report": "yarn coveralls:push",
    "coveralls:push": "cat ./coverage/lcov.info | coveralls",
    "docs": "typedoc --readme README.md --tsconfig tsconfig.json src/main --ignoreCompilerErrors || exit 0",
    "uglify": "for f in $(find target -name '*.js'); do short=${f%.js}; terser -c -m -o $short.js -- $f; done",
    "postupdate": "yarn && yarn build && yarn test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/qiwi/license.git"
  },
  "keywords": [
    "license",
    "oss",
    "mit"
  ],
  "bugs": {
    "url": "https://github.com/qiwi/license/issues"
  },
  "homepage": "https://github.com/qiwi/license#readme",
  "dependencies": {
    "@qiwi/substrate": "^1.20.7",
    "@types/lodash": "^4.14.168",
    "@types/meow": "^6.0.0",
    "@types/read-pkg": "^5.1.0",
    "find-git-root": "^1.0.4",
    "lodash": "^4.17.21",
    "meow": "^9.0.0",
    "read-pkg": "^6.0.0",
    "tslib": "^2.2.0"
  },
  "devDependencies": {
    "@qiwi/libdefkit": "^2.1.8",
    "@qiwi/semantic-release-gh-pages-plugin": "^5.0.7",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/github": "^7.2.1",
    "@semantic-release/npm": "^7.1.1",
    "@types/jest": "^26.0.23",
    "@types/jest-json-schema": "^2.1.3",
    "coveralls": "^3.1.0",
    "eslint-plugin-typescript": "^0.14.0",
    "esm": "^3.2.25",
    "execa": "^5.0.0",
    "jest": "^26.6.3",
    "lodash": "^4.17.15",
    "microbundle": "^0.13.0",
    "rimraf": "^3.0.2",
    "semantic-release": "^17.4.2",
    "terser": "^5.7.0",
    "ts-jest": "^26.5.5",
    "tslint": "^6.1.3",
    "tslint-config-qiwi": "^1.7.0",
    "typedoc": "^0.20.36",
    "typedoc-plugin-external-module-name": "^4.0.6",
    "typescript": "^4.2.4",
    "typescript-eslint-parser": "^22.0.0"
  },
  "release": {
    "branch": "master",
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git",
      "@qiwi/semantic-release-gh-pages-plugin"
    ],
    "prepare": [
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git"
    ],
    "publish": [
      "@semantic-release/npm",
      "@semantic-release/github",
      "@qiwi/semantic-release-gh-pages-plugin"
    ]
  },
  "author": "QIWI <orensource@qiwi.com>",
  "contributors": [
    "Anton Golub <a.golub@qiwi.com>",
    "Osipova Evgeniya <e.osipova@qiwi.com>"
  ],
  "license": "MIT",
  "private": false
}
